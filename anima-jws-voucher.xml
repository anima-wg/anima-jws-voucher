<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.23 (Ruby 2.6.10) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-anima-jws-voucher-08" category="std" consensus="true" submissionType="IETF" updates="I-D.draft-ietf-anima-rfc8366bis" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.16.0 -->
  <front>
    <title abbrev="JWS-voucher">JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-08"/>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization>Siemens AG</organization>
      <address>
        <email>thomas-werner@siemens.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
      </address>
    </author>
    <date year="2023" month="August" day="25"/>
    <area>Internet</area>
    <workgroup>anima Working Group</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <t>TODO: RFC8366bis defines a digital artifact called voucher as a YANG-defined JSON document that is signed using a Cryptographic Message Syntax (CMS) structure.
This document introduces a variant of the voucher artifact in which CMS is replaced by the JSON Object Signing and Encryption (JOSE) mechanism described in RFC7515 to support deployments in which JOSE is preferred over CMS.</t>
      <t>In addition to explaining how the format is created, the "application/voucher-jws+json" media type is registered and examples are provided.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>"A Voucher Artifact for Bootstrapping Protocols" <xref target="I-D.draft-ietf-anima-rfc8366bis"/> defines a YANG-based data structure used in "Bootstrapping Remote Secure Key Infrastructure" <xref target="BRSKI"/> and
"Secure Zero Touch Provisioning" <xref target="SZTP"/> to transfer ownership of a device from a manufacturer to a new owner (customer or operational domain).
That document provides a serialization of the voucher data to JSON <xref target="RFC8259"/> (JSON Voucher Data) with cryptographic signing according to the Cryptographic Message Syntax (CMS) <xref target="RFC5652"/>.
The resulting voucher artifact has the media type "application/voucher-cms+json".</t>
      <t><xref target="I-D.ietf-anima-constrained-voucher"/> provides a serialization of the voucher data to CBOR <xref target="RFC8949"/>
with the signature format of COSE <xref target="RFC8812"/>
and the media type "application/voucher-cose+cbor".</t>
      <t>This document provides cryptographic signing of the JSON Voucher Data in form of JSON Web Signature (JWS) <xref target="RFC7515"/>
and the media type "application/voucher-jws+json".
The encoding specified in this document is used by <xref target="I-D.ietf-anima-brski-prm"/>
and may be more handy for use cases already using Javascript Object Signing and Encryption (JOSE).</t>
      <t>With the availability of different encoded vouchers, it is up to an industry specific application statement to indicate/decide which voucher signature format is to be used.
There is no provision across the different voucher signature formats that a receiver could safely recognize which format it uses unless additional context is provided.
For example, <xref target="BRSKI"/> provides this context via the media type for the voucher artifact.
This document utilizes the optional "typ" (Type) Header Parameter of JWS <xref target="RFC7515"/> to provide information about the signed object.</t>
      <t>This document should be considered an update to <xref target="I-D.draft-ietf-anima-rfc8366bis"/> in the category of "See Also" as per <xref target="I-D.kuehlewind-update-tag"/>.
It does not extend the YANG definition of <xref target="I-D.draft-ietf-anima-rfc8366bis"/>.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <t>This document uses the following terms:</t>
      <dl>
        <dt>JSON Voucher Data:</dt>
        <dd>
          <t>An unsigned JSON representation of the Voucher Data.</t>
        </dd>
        <dt>JWS Voucher:</dt>
        <dd>
          <t>A JWS structure signing the JSON Voucher Data.</t>
        </dd>
        <dt>Voucher:</dt>
        <dd>
          <t>A short form for Voucher Artifact and refers to the signed statement from the MASA service that indicates to a pledge the cryptographic identity of the domain it should trust, per <xref target="I-D.draft-ietf-anima-rfc8366bis"/>.</t>
        </dd>
        <dt>Voucher Data:</dt>
        <dd>
          <t>The raw (serialized) representation of the ietf-voucher YANG module without any enclosing signature, per <xref target="I-D.draft-ietf-anima-rfc8366bis"/>.</t>
        </dd>
      </dl>
      <t>This document uses the following encoding notations:</t>
      <dl>
        <dt>BASE64URL(OCTETS):</dt>
        <dd>
          <t>Denotes the base64url encoding of OCTETS, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
        <dt>UTF8(STRING):</dt>
        <dd>
          <t>Denotes the octets of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
      </dl>
    </section>
    <section anchor="voucher-artifact-with-json-web-signature">
      <name>Voucher Artifact with JSON Web Signature</name>
      <t><xref target="RFC7515"/> defines the following serializations for JWS:</t>
      <ol spacing="normal" type="1"><li>"JWS Compact Serialization" in <xref section="7.1" sectionFormat="of" target="RFC7515"/></li>
        <li>
          <t>"JWS JSON Serialization" in <xref section="7.2" sectionFormat="of" target="RFC7515"/>
          </t>
          <ul spacing="normal">
            <li>"General JWS JSON Serialization Syntax" in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/></li>
            <li>"Flattened JWS JSON Serialization Syntax" in <xref section="7.2.2" sectionFormat="of" target="RFC7515"/></li>
          </ul>
        </li>
      </ol>
      <t>A "JWS JSON Serialization Overview" is given in <xref section="3.2" sectionFormat="of" target="RFC7515"/> and more details on the JWS serializations in <xref section="7" sectionFormat="of" target="RFC7515"/>.
This document makes use of the "General JWS JSON Serialization Syntax" of <xref target="RFC7515"/> to support multiple signatures,
as already supported by <xref target="RFC8366"/> for CMS-signed vouchers.</t>
      <section anchor="voucher-representation-in-general-jws-json-serialization-syntax">
        <name>Voucher Representation in General JWS JSON Serialization Syntax</name>
        <t>JWS Voucher artifacts MUST use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>.
The following figure summarizes the serialization of JWS Voucher artifacts:</t>
        <figure anchor="VoucherGeneralJWSFigure">
          <name>Voucher Representation in General JWS JSON Serialization Syntax (JWS Voucher)</name>
          <artwork align="left"><![CDATA[
    {
      "payload": BASE64URL(UTF8(JSON Voucher Data)),
      "signatures": [
        {
          "protected": BASE64URL(UTF8(JWS Protected Header)),
          "signature": BASE64URL(JWS Signature)
        }
      ]
    }
]]></artwork>
        </figure>
        <t>The JSON Voucher Data MUST be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the "payload" member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the "protected" member.
The generated JWS Signature is base64url-encoded to become the string value of the "signature" member.</t>
      </section>
      <section anchor="json-voucher-data">
        <name>JSON Voucher Data</name>
        <t>The JSON Voucher Data is an unsigned JSON document <xref target="RFC8259"/> that conforms with the data model described by the ietf-voucher YANG module <xref target="RFC7950"/> defined in <xref section="5.3" sectionFormat="of" target="I-D.draft-ietf-anima-rfc8366bis"/> and is encoded using the rules defined in <xref target="RFC7951"/>.
The following figure provides an example of JSON Voucher Data:</t>
        <figure anchor="VoucherGeneralJWSVoucherPayloadFigure">
          <name>JSON Voucher Data Example</name>
          <artwork align="left"><![CDATA[
    {
      "ietf-voucher:voucher": {
        "assertion": "logged",
        "serial-number": "0123456789",
        "nonce": "5742698422680472",
        "created-on": "2022-07-08T03:01:24.618Z",
        "pinned-domain-cert": "base64encodedvalue=="
      }
    }
]]></artwork>
        </figure>
      </section>
      <section anchor="jws-protected-header">
        <name>JWS Protected Header</name>
        <t>The JWS Protected Header defined in <xref target="RFC7515"/> uses the standard header parameters "alg", "typ", and "x5c".
The "alg" parameter MUST contain the algorithm type used to create the signature, e.g., "ES256" as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.
If present, the "typ" parameter SHOULD contain the value "TODO: voucher-jws+json" as defined in <xref section="4.1.9" sectionFormat="of" target="RFC7515"/>.
If X.509 (PKIX) certificates <xref target="RFC5280"/> are used, the "x5c" parameter SHOULD contain the base64-encoded (not base64url-encoded) DER certificate and chain as defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>
        <t>Implementation Note:
base64-encoded values opposed to base64url-encoded values may contain slashes ('/').
JSON <xref target="RFC8259"/> optionally allows to escape these with backslashes ('').
Hence, depending on the JSON parser/serializer implementation used, they may or may not be included.
JWS Voucher parsers must be prepared accordingly to extract certificates correctly.</t>
        <t>Vouchers will often need all certificates in the chain,
including what would be considered the trust anchor certificate,
because intermediate devices (such as the Registrar) may need to audit the artifact,
or end systems may need to pin a trust anchor for future operations.
Note, a trust anchor SHOULD be provided differently to be trusted.
This is consistent with <xref section="5.5.2" sectionFormat="of" target="BRSKI"/>.</t>
        <t>The following figure gives an example of a JWS Protected Header:</t>
        <figure anchor="VoucherGeneralJWSProtectedHeaderFigure">
          <name>JWS Protected Header Example</name>
          <artwork align="left"><![CDATA[
    {
      "alg": "ES256",
      "typ": "voucher-jws+json",
      "x5c": [
        "base64encodedvalue1==",
        "base64encodedvalue2=="
      ]
    }  
]]></artwork>
        </figure>
      </section>
      <section anchor="jws-signature">
        <name>JWS Signature</name>
        <t>The JWS Signature is generated over the JWS Protected Header and the JWS Payload (= UTF-8 encoded JSON Voucher Data) as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
      </section>
    </section>
    <section anchor="privacy-considerations">
      <name>Privacy Considerations</name>
      <t>The Voucher Request reveals the IDevID of the component (Pledge) that is in the process of bootstrapping.</t>
      <t>This request occurs via HTTP-over-TLS, however, for the Pledge-to-Registrar TLS connection, the Pledge is provisionally accepting the Registrar server certificate.
Hence it is subject to disclosure by a Dolev-Yao attacker (a "malicious messenger") <xref target="ON-PATH"/>, as explained in <xref section="10.2" sectionFormat="of" target="BRSKI"/>.</t>
      <t>The use of a JWS header brings no new privacy considerations.</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>The issues of how <xref target="I-D.draft-ietf-anima-rfc8366bis"/> vouchers are used in a <xref target="BRSKI"/> system is addressed in <xref section="11" sectionFormat="of" target="BRSKI"/>.
This document does not change any of those issues, it just changes the signature technology used for voucher request and response artifacts.</t>
      <t><xref section="9" sectionFormat="of" target="SZTP"/> deals with voucher use in Secure Zero Touch Provisioning, for which this document also makes no changes to security.</t>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <section anchor="media-type-registry">
        <name>Media-Type Registry</name>
        <t>This section registers the "application/voucher-jws+json" in the "Media Types" registry.</t>
        <section anchor="applicationvoucher-jwsjson">
          <name>application/voucher-jws+json</name>
          <artwork><![CDATA[
Type name:  application
Subtype name:  voucher-jws+json
Required parameters:  none
Optional parameters:  none
Encoding considerations:  JWS+JSON vouchers are JOSE objects
                          signed with one or multiple signers.
Security considerations:  See section [Security Considerations]
Interoperability considerations:  The format is designed to be
  broadly interoperable.
Published specification:  [THIS RFC].
Applications that use this media type:  ANIMA, 6tisch, and other
  zero-touch bootstrapping/provisioning solutions
Additional information:
  Magic number(s):  None
  File extension(s):  .vjj
  Macintosh file type code(s):  none
Person & email address to contact for further information:  IETF
  ANIMA WG
Intended usage:  LIMITED
Restrictions on usage:  NONE
Author:  ANIMA WG
Change controller:  IETF
Provisional registration? (standards tree only):  NO
]]></artwork>
        </section>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>We would like to thank the various reviewers for their input,
in particular Steffen Fries, Ingo Wenda, Esko Dijk and Toerless Eckert.
Thanks for the supporting PoC implementations to Hong Rui Li and He Peng Jia.</t>
    </section>
    <section anchor="examples">
      <name>Examples</name>
      <t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>
      <section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar">
        <name>Example Pledge Voucher Request - PVR (from Pledge to Registrar)</name>
        <t>The following is an example request sent from a Pledge to the Registrar, in "General JWS JSON Serialization".</t>
        <figure anchor="ExamplePledgeVoucherRequestfigure">
          <name>Example Pledge Voucher Request - PVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdDp2b3VjaGVyIjp7InNlcmlhbC\
1udW1iZXIiOiIwMTIzNDU2Nzg5Iiwibm9uY2UiOiI2R3RuK1pRS04ySHFERlZrQkV4Wk\
xRPT0iLCJjcmVhdGVkLW9uIjoiMjAyMi0wNy0wOFQwODo0MDo0Mi44MjBaIiwicHJveG\
ltaXR5LXJlZ2lzdHJhci1jZXJ0IjoiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRG\
N3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcG\
JsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCaz\
E2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtxUk\
w3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFXTU\
JRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRBd1\
NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRDNX\
VaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtCZ2\
dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlDTy\
9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBTbD\
JoNHhJWGsxIn19",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0\
FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1\
FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRF\
ZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbG\
paVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRU\
VYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TX\
gyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaG\
MyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYU\
FGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0\
FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBRE\
JFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWE\
NtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cC\
I6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "abVg4TDGzSTjVHkQlNeIW3ABu5ZXdMl1cEqwcIAlHFW4BrlGbO\
-DRTKfyCOGxSW49-ktJcrVlYgKqC4xmZoy0Q"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa">
        <name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>
        <t>The term parboiled refers to food which is partially cooked.
In <xref target="BRSKI"/>, the term refers to a Pledge voucher-request (PVR) which has been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>
        <t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>
        <figure anchor="ExampleParboiledRegistrarVoucherRequestfigure">
          <name>Example Parboiled Registrar Voucher Request - RVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdDp2b3VjaGVyIjp7InNlcmlhbC\
1udW1iZXIiOiIwMTIzNDU2Nzg5IiwiaWRldmlkLWlzc3VlciI6IkJCZ3dGb0FVVkF1TT\
NNLzlMK1NpNk5EQ09Ea1RsKy9CeGhzPSIsIm5vbmNlIjoiNkd0bitaUUtOMkhxREZWa0\
JFeFpMUT09IiwicHJpb3Itc2lnbmVkLXZvdWNoZXItcmVxdWVzdCI6ImV5SndZWGxzYj\
JGa0lqb2laWGxLY0ZwWVVtMU1XRnAyWkZkT2IxcFlTWFJqYlZaNFpGZFdlbVJFY0RKaU\
0xWnFZVWRXZVVscWNEZEpiazVzWTIxc2FHSkRNWFZrVnpGcFdsaEphVTlwU1hkTlZFbD\
ZUa1JWTWs1Nlp6VkphWGRwWW0wNWRWa3lWV2xQYVVreVVqTlNkVXN4Y0ZKVE1EUjVVMG\
hHUlZKc1duSlJhMVkwVjJ0NFVsQlVNR2xNUTBwcVkyMVdhR1JIVm10TVZ6bDFTV3B2YV\
UxcVFYbE5hVEIzVG5rd2QwOUdVWGRQUkc4d1RVUnZNRTFwTkRSTmFrSmhTV2wzYVdOSV\
NuWmxSMngwWVZoU05VeFlTbXhhTW14NlpFaEthR05wTVdwYVdFb3dTV3B2YVZSVmJFcF\
JhbEp4VVRCT1FsZFhiRzVSV0dSS1VXdEdibE5WWkVKWFJtc3pUVzFLYVZkck1VSmlNR1\
JFVVROR1NGVXdNREJQVlVwQ1ZGVk9UbEpHVmpSU1dIQkNWV3RLYmxSc1drTlJWemxPVV\
RKemVFNVdSblZXYm5Cb1ZucFdjMWw2VGs1bFJWSlZVVlY0UTFvd05WZFJhMFpxVkZWS1\
IxUnVRbXRTTVZZMFVraHdRbFJyU201VWJGcERVVlV4VGxGdGVGTmlSMDE2Vld0U1VsWk\
ZSbXhTYm1OM1pWVXhSVkpZYkU1U1IwNHpWRzF3Ums1Rk1WVlRiVVpIWkhwQ05sUlZVa1\
psVlRGRldUTmtUMkZyVlRCVVZsSkxXVlV4UlU1SWFFWmxhMFpUVVcxa1QxWnJTa0ppTU\
RGRVlYcEZNVlZYTlZkbGJVWllUbGQ0YWswd01UUlNSbEpDVkVWS2JsUnNXa05SVjA1T1\
VXdGFUMk5IVWtoV1dHaElVa1ZHV0ZGdFpFOVdhMHBDVkZVeFJVMUdTakpaYkdSSFkwZE\
tjMU50ZUdGTmJYZzJXa1ZvUzJGSFRuRlJiSEJPVVdzeFNGRnViSGhTTVU1T1RrUnNRbG\
93VmtoUk1FNTRVakZPVGs1RWJFSmtNRlpKVVZSQ1NsRlZTa05oZWtVeVUzazVjRTU2Yk\
haVmJYUk1UbFpzYVZwV1FtNVBSbFpVVldwbmRtUllUWGhhUmtKV1lWWndTVlJZVW5aaE\
1VNXJZMVYwV0U1WFduVldNMDVEV2tOMGVGVnJkek5XTVVwdFdtMVdXR0V6Ykc1YVYwcD\
JVMjFhU21KSGVERmpiVTV3VFdwV00ySnRhSEJVTVZwRVVqSndiR1ZyU1RGVVZVbDNVak\
JGZUZaWFVrdFZWa1pZVkZWS1VsSXdUa1JqTUdSQ1ZWWldSMUZ1WkU1UmEwcHVXak5LUT\
Fvd1ZrZFJiRVpxVWtWb1JWRlZPVU5hTURWWFUwWkZORkZyUm0xUFJWWkRVVlV4UkZGcV\
VrSmtNVTVDVjFWU1YxVnFRbE5SYTFaR1pERkJNRk5YVW1waVZscDFXVlpvVDAxSFRuUl\
NibXhOVjBaS2MxbDZUbEprVjAxNVlrZDRhVll4V2pGWk0ydDRZVmRTUkU1WVZtRlhSaz\
VFVTBjMVMySkdiM2xpU0hCclUwVndiMWt5YTNoTlJuQlpWR3BDVDJGVVZqWlpWbVJYWk\
Vad1dFNVljRTFXTUc5M1ZFY3dNV0pIVWtWUlZYUkRXakprZUdGSGRIRlVNVUpTVlZWU1\
Fsb3dOVXBSVlZKRFVtdEdjRkZ1YUhOYVJVcHZWMjVGZDFKWVdURlRhM2Q1VlVoS1dGRX\
pValZWZWxwdlVrWnNXRTFZYkVSVWVUbFRXVmhXYVdORlRUTlVWMFpLVWtka1NtRkZSaz\
FWTUhCcFdqQjRkVm95YUdsWmEwWnVUVWRTYWxZd1dsWldiVGgyV2pCa1QwMURPWEZrTT\
NCTFYycENWR0pFU205T1NHaEtWMGR6ZUVsdU1Ua2lMQ0p6YVdkdVlYUjFjbVZ6SWpwYm\
V5SndjbTkwWldOMFpXUWlPaUpsZVVvMFRsZE5hVTlzYzJsVVZXeEtVV2wwVlZFd1RrSl\
pWVTV1VVZoa1NsRnJSbTVUVldSQ1YwYzFWMkZ1VGxaT1ZURkNZakJrUkZFelJraFZNRE\
F3VDFWS1FsUlZUazVTUkVJMFVUTndRbE5yU201VWJGcERVVlpzVlZGWGRFZFZhekZUVm\
xoa1JtUXhiRVZXYkVaU1V6QlNRbVZGZEdoV2VsWjFWVEl4YzJSV2IzZFVibHBxWW10R0\
5GSnVjRUpXYTBwdVZHeGFRMUZWTVU1U1IzUjNZMGRLZEZwRmRHaFdlbFoxVm10a1YyVn\
RVa1pVYTBwT1VUQkdXVkpHVWtwbFJURkZWMWhrVDFKRlJYaFVhMUphWlVVMVIySXhiRV\
ZsYlhNeFZERlNjbVZGTVhGVVdHaE9ZV3N3ZUZReFVsWk9WbVJ4VVd4T1RsVllUak5STV\
VaYVVrWmFVbFZWWkVaa01IQkRWbFpTUmxack1VTlVWV1JDVFZaV1JsRXlaRE5VVms1MF\
lraFdZVTFJUW5kWmJURnJVa2RKZWxOdVpFNVZhekV6VWxaR1dsSkdXbEpWVlZwR1pEST\
VNMVJXVWtwbGF6VkZWbFJLVDJWdFl6RlVWa3BxWkRCYVVsZFZVbGRWVmtaRlVrVkZNVk\
15UmxoT1Z6VlVZbGQ0TVZkcVFsTmlSMUowWWtkd1lWWkZTbUZVVlVwT1VqQktOV05WWk\
ZSVVZGRTFVVmRrUmxJd1RrUmpWV1JVVkZSUk5WRllaRVpUUlVWM1UxVkdRMUY2WXpWaV\
IyeG9WVzFPUTJGc2NHcFNWVlpaWkhwa2VWWlhWbWhrYmxKSVUydEdNVk5FVW5kaGVsSk\
tUa1JLTWxsVlNrNWpNVlY0VFZkc1RWSkZUa1JVUjNSWFlVaFNWbFpxU1hoaVdGcG9Vek\
JPTWxSWVozbFhVM1JVVkZka1VrOUhXbTFrTUhkNVRUTnZlbFpGYkZkUmJHUnhXa1pTUT\
JWck1VUmpNR1JFVVROT1NGRldSbFpTYTBvelVsZGtRMUZxYUZoVFJtTjRZVWROZVZKWV\
VtdFNNVm8yV2tWTk1XVnRSbGhXYmxKaFZucFdObFJHWkV0TlJYaDBUbGQ0YTFKSE9ERl\
VhMUpTWldzeFEwOUZaRUpOVmxaclUxaGtVbGRWTVVOWlZVWkhVbXhHVFdGck5UWlZSbm\
QyVlRGM2RtRXlPVEZoYkVZellXMWpNVkpVVm0xa2JtUnFWMWRLVGxGck1VaFJWRVpXV2\
tWd1VsVlZNVTVSVnpsSVVUQk9lbEl3UmxKV1ZWcERaREF4UkZSVlJUQlNNRVY0VmxkU1\
JXUXdWa05ZUXprelZWVldRbVF3YkVsYU1GSkNVekJLYmxvelJtOWhNbkJRVlVaR1VsSk\
ZSbTVVYTJoQ1VrVktSbEZYYkVOa1ZFNHpWV3RLVFdNd2NFNVZSRlo2VkZSQk0wMUZaM0\
pXVlZwNVpWVTFWazV0WkV4bGEzaFFWVzFPUjJWV1NsTlVNbmg0WTFWb2NGb3diRzVYUl\
U1MFUydDRWV1ZyVm5Oa2ExRjVZMGM1VEU1dFVqUk9iWGQ0V0VNNU1XVlhNVlZpYlVwU1\
VrVlNiVk50ZUdoa1NGWlpUV3hLZGxRd1ZUbEpiREJ6U1c1U05XTkRTVFpKYmxwMlpGZE\
9iMXBZU1hSaGJtUjZTekp3ZW1JeU5HbE1RMHBvWWtkamFVOXBTa1pWZWtreFRtbEtPU0\
lzSW5OcFoyNWhkSFZ5WlNJNkltRmlWbWMwVkVSSGVsTlVhbFpJYTFGc1RtVkpWek5CUW\
5VMVdsaGtUV3d4WTBWeGQyTkpRV3hJUmxjMFFuSnNSMkpQTFVSU1ZFdG1lVU5QUjNoVF\
Z6UTVMV3QwU21OeVZteFpaMHR4UXpSNGJWcHZlVEJSSW4xZGZRPT0iLCJjcmVhdGVkLW\
9uIjoiMjAyMi0wNy0wOFQwODo0MDo0Mi44NDhaIn19",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "0fzuqVdyhemWsu_HQeF-CmQwJeLp9IStNf-bWZwz6SojrEOR4a\
Dq6VStyG8eWXjGHNZiRyyLJo7RP1rKatuS2w"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-response-from-masa-to-pledge-via-registrar">
        <name>Example Voucher Response (from MASA to Pledge, via Registrar)</name>
        <t>The following is an example voucher response from MASA to Pledge via Registrar, in "General JWS JSON Serialization".</t>
        <figure anchor="ExampleVoucherResponsefigure">
          <name>Example Voucher Response</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJsb2\
dnZWQiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjoiZGRoSGQ4Ml\
FpUGtzMDBTck1USTlEUT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMDdUMTc6NDc6MD\
EuODkwWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2NZNVBKaWJ2Z0\
hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXdFQi93UUlNQV\
lCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0JCVG9aSU16UW\
RzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBdHhRMy\
tJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUURHMnVSQ0hsVn\
EzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "y1HLYBFlwouf42XWSKUWjeYQHnG2Q6A4bjA7hvTkB3z1dPwTUl\
jPHtuN2Qex6gDxTfaSiKeoXGsOD4JWOgQJPg"
  }]
}
]]></artwork>
        </figure>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="BRSKI">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="SZTP">
          <front>
            <title>Secure Zero Touch Provisioning (SZTP)</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="I. Farrer" initials="I." surname="Farrer"/>
            <author fullname="M. Abrahamsson" initials="M." surname="Abrahamsson"/>
            <date month="April" year="2019"/>
            <abstract>
              <t>This document presents a technique to securely provision a networking device when it is booting in a factory-default state. Variations in the solution enable it to be used on both public and private networks. The provisioning steps are able to update the boot image, commit an initial configuration, and execute arbitrary scripts to address auxiliary needs. The updated device is subsequently able to establish secure connections with other systems. For instance, a device may establish NETCONF (RFC 6241) and/or RESTCONF (RFC 8040) connections with deployment-specific network management systems.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8572"/>
          <seriesInfo name="DOI" value="10.17487/RFC8572"/>
        </reference>
        <reference anchor="I-D.draft-ietf-anima-rfc8366bis">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization>Watsen Networks</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software</organization>
            </author>
            <author fullname="Max Pritikin" initials="M." surname="Pritikin">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei Technologies Inc.</organization>
            </author>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization>Huawei</organization>
            </author>
            <date day="22" month="August" year="2023"/>
            <abstract>
              <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge's manufacturer.  This artifact is known as a "voucher".

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge's
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-10"/>
        </reference>
        <reference anchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC5652">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2009"/>
            <abstract>
              <t>This document describes the Cryptographic Message Syntax (CMS). This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC7950">
          <front>
            <title>The YANG 1.1 Data Modeling Language</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7950"/>
          <seriesInfo name="DOI" value="10.17487/RFC7950"/>
        </reference>
        <reference anchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
        <reference anchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC8366">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <date month="May" year="2018"/>
            <abstract>
              <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
              <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
              <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8366"/>
          <seriesInfo name="DOI" value="10.17487/RFC8366"/>
        </reference>
        <reference anchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8812">
          <front>
            <title>CBOR Object Signing and Encryption (COSE) and JSON Object Signing and Encryption (JOSE) Registrations for Web Authentication (WebAuthn) Algorithms</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <date month="August" year="2020"/>
            <abstract>
              <t>The W3C Web Authentication (WebAuthn) specification and the FIDO Alliance FIDO2 Client to Authenticator Protocol (CTAP) specification use CBOR Object Signing and Encryption (COSE) algorithm identifiers. This specification registers the following algorithms (which are used by WebAuthn and CTAP implementations) in the IANA "COSE Algorithms" registry: RSASSA-PKCS1-v1_5 using SHA-256, SHA-384, SHA-512, and SHA-1; and Elliptic Curve Digital Signature Algorithm (ECDSA) using the secp256k1 curve and SHA-256. It registers the secp256k1 elliptic curve in the IANA "COSE Elliptic Curves" registry. Also, for use with JSON Object Signing and Encryption (JOSE), it registers the algorithm ECDSA using the secp256k1 curve and SHA-256 in the IANA "JSON Web Signature and Encryption Algorithms" registry and the secp256k1 elliptic curve in the IANA "JSON Web Key Elliptic Curve" registry.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8812"/>
          <seriesInfo name="DOI" value="10.17487/RFC8812"/>
        </reference>
        <reference anchor="RFC8949">
          <front>
            <title>Concise Binary Object Representation (CBOR)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
              <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="94"/>
          <seriesInfo name="RFC" value="8949"/>
          <seriesInfo name="DOI" value="10.17487/RFC8949"/>
        </reference>
        <reference anchor="ON-PATH" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
          <front>
            <title>can an on-path attacker drop traffic?</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="I-D.ietf-anima-constrained-voucher">
          <front>
            <title>Constrained Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Peter Van der Stok" initials="P." surname="Van der Stok">
              <organization>vanderstok consultancy</organization>
            </author>
            <author fullname="Panos Kampanakis" initials="P." surname="Kampanakis">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Esko Dijk" initials="E." surname="Dijk">
              <organization>IoTconsultancy.nl</organization>
            </author>
            <date day="7" month="July" year="2023"/>
            <abstract>
              <t>   This document defines the Constrained Bootstrapping Remote Secure Key
   Infrastructure (Constrained BRSKI) protocol, which provides a
   solution for secure zero-touch bootstrapping of resource-constrained
   (IoT) devices into the network of a domain owner.  This protocol is
   designed for constrained networks, which may have limited data
   throughput or may experience frequent packet loss.  Constrained BRSKI
   is a variant of the BRSKI protocol, which uses an artifact signed by
   the device manufacturer called the "voucher" which enables a new
   device and the owner's network to mutually authenticate.  While the
   BRSKI voucher is typically encoded in JSON, Constrained BRSKI uses a
   compact CBOR-encoded voucher.  The BRSKI voucher is extended with new
   data types that allow for smaller voucher sizes.  The Enrollment over
   Secure Transport (EST) protocol, used in BRSKI, is replaced with EST-
   over-CoAPS; and HTTPS used in BRSKI is replaced with CoAPS.  This
   document Updates RFC 8366 and RFC 8995.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-constrained-voucher-21"/>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-prm">
          <front>
            <title>BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
            <author fullname="Steffen Fries" initials="S." surname="Fries">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Thomas Werner" initials="T." surname="Werner">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Eliot Lear" initials="E." surname="Lear">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="10" month="July" year="2023"/>
            <abstract>
              <t>   This document defines enhancements to Bootstrapping a Remote Secure
   Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in
   domains featuring no or only limited connectivity between a pledge
   and the domain registrar.  It specifically changes the interaction
   model from a pledge-initiated mode, as used in BRSKI, to a pledge-
   responding mode, where the pledge is in server role.  For this, BRSKI
   with Pledge in Responder Mode (BRSKI-PRM) introduces a new component,
   the registrar-agent, which facilitates the communication between
   pledge and registrar during the bootstrapping phase.  To establish
   the trust relation between pledge and registrar, BRSKI-PRM relies on
   object security rather than transport security.  The approach defined
   here is agnostic to the enrollment protocol that connects the domain
   registrar to the domain CA.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-09"/>
        </reference>
        <reference anchor="I-D.kuehlewind-update-tag">
          <front>
            <title>Definition of new tags for relations between RFCs</title>
            <author fullname="Mirja KÃ¼hlewind" initials="M." surname="KÃ¼hlewind">
              <organization>Ericsson</organization>
            </author>
            <author fullname="Suresh Krishnan" initials="S." surname="Krishnan">
              <organization>Kaloom</organization>
            </author>
            <date day="12" month="July" year="2021"/>
            <abstract>
              <t>   An RFC can include a tag called "Updates" which can be used to link a
   new RFC to an existing RFC.  On publication of such an RFC, the
   existing RFC will include an additional metadata tag called "Updated
   by" which provides a link to the new RFC.  However, this tag pair is
   not well-defined and therefore it is currently used for multiple
   different purposes, which leads to confusion about the actual meaning
   of this tag and inconsistency in its use.

   This document recommends the discontinuation of the use of the
   updates/updated by tag pair, and instead proposes three new tag pairs
   that have well-defined meanings and use cases.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-kuehlewind-update-tag-04"/>
        </reference>
      </references>
    </references>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
        <organization>Futurewei Technologies Inc.</organization>
        <address>
          <email>tte+ietf@cs.fau.de</email>
        </address>
      </contact>
      <contact initials="E." surname="Dijk" fullname="Esko Dijk">
        <organization/>
        <address>
          <email>esko.dijk@iotconsultancy.nl</email>
        </address>
      </contact>
      <contact initials="S." surname="Fries" fullname="Steffen Fries">
        <organization>Siemens AG</organization>
        <address>
          <email>steffen.fries@siemens.com</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
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
sVZf1XD77a//SX+oarWDij7/lSkadCy8xLin5LeLyHssL/6oqdr7KrBymuUB
ow+FTcWWnDT2Tmje9FAqndW2OvedN67yehyC9HGdl2zNY8a5/Hgp0JKq6Lej
9SmMD76BgiBe1g3CM+b2Y6SpZfkoG32cyz/yiIo+/nNyH12vkbwW56kyatko
81RyQ03/1DInHz0uw1Dmna1/5AJY135LLI+g+roTVHE0VDSM/hXtY6ejaoaA
83jRK7M0vdAfkqPaYW763DE5vzFl/6rLdvj3yySWTLCFg8Lqsp+tna9ZJ/Kd
k970+R/i2an/kxzK1WN/5JwifgBhr/f6rfkbsHFCowu7AEJWROBb+wIF1BNc
4wQ3FzV8XiZrZkQ2hOM73V7/+tevN6+HJWniMDy66P/a61zffO11Otdfud6v
ndeDmpbuZb1Wh+t0LrlfL7mvOtf9xvHfOr2ra/6r9fqNLEhYM6zm0pcOBGVv
1h7ZKLfyu99+u2i9xrs/w7nmQQME56j33hGFWuM/RDDm1B8EaOsEOG9D92OE
OhHo6ljUzl3UZ9X47NAUQC1rR0+s6mStg6bE3PadpqlV/XgaXaMoa1/YTdGO
39McARLX7Yuqu4VQrq1y3h/80vaunq6wkqB1+tcXNbp9EBC9K/5dUp48thsY
a3r3VaPjJFdTT7+WrMaOi/p85n17/89Wv3m/+vyqz920Pz3cTeaf28xnWLOr
quAqfbNDMRaiTbe9EZLp8c+FrL3uCIKfWPfiHTZ+bo8E8nrRykqOzyb5s21c
vy0qJszr4mMuUOFE31pvRKjUhhwCvtfY8j1WN2NYg/KwmSKyCx/PPv31l79+
vmq9a64fWlTRjnUO0k1V+QJE7azykqKuIrGWE56m+s6mGmNV+I7rZV5SV27J
qYSHcgEmvxyL17wdnO/xaI1dJS7YKvurUjPrkjjRumrbveZv9ZzYHkprNgqO
h0eskXLo+GMT1UlTdQR47g0YkcME0e5Ua7MMEkWwBcqTduKxiVjv5PVbhw4Y
M+mXVi0W2+qGJaLNBz02Nrqq/eEKjo9dvZruSwuJ1Gb8uOoCVc3F0mtOXqDW
gp3cNGcLpDrWyu38c60Xrza5jeXr/t+BzH5pscYm3K7YFaUXF2fDM+aI5/Kw
uuCxOns/nd2gKmAu9+Xt2CYulqeTtFM3t1b1stlt3QlGEqybqAU7kkuayvh1
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

-->

</rfc>
