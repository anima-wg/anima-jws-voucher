<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.23 (Ruby 2.6.10) -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-anima-jws-voucher-10" category="std" consensus="true" submissionType="IETF" updates="8366bis" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.16.0 -->
  <front>
    <title abbrev="JWS-voucher">JWS signed Voucher Artifacts for Bootstrapping Protocols</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-anima-jws-voucher-10"/>
    <author initials="T." surname="Werner" fullname="Thomas Werner">
      <organization>Siemens AG</organization>
      <address>
        <email>thomas-werner@siemens.com</email>
      </address>
    </author>
    <author initials="M." surname="Richardson" fullname="Michael Richardson">
      <organization>Sandelman Software Works</organization>
      <address>
        <email>mcr+ietf@sandelman.ca</email>
      </address>
    </author>
    <date year="2024" month="June" day="19"/>
    <area>Internet</area>
    <workgroup>anima Working Group</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <t><xref target="I-D.draft-ietf-anima-rfc8366bis"/> defines a digital artifact called voucher as a YANG-defined JSON document that is signed using a Cryptographic Message Syntax (CMS) structure.
This document introduces a variant of the voucher artifact in which CMS is replaced by the JSON Object Signing and Encryption (JOSE) mechanism described in RFC7515 to support deployments in which JOSE is preferred over CMS.</t>
      <t>In addition to explaining how the format is created, the "application/voucher-jws+json" media type is registered and examples are provided.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="introduction">
      <name>Introduction</name>
      <t>"A Voucher Artifact for Bootstrapping Protocols" <xref target="I-D.draft-ietf-anima-rfc8366bis"/> defines a YANG-based data structure used in "Bootstrapping Remote Secure Key Infrastructure" <xref target="BRSKI"/> and
"Secure Zero Touch Provisioning" <xref target="SZTP"/> to transfer ownership of a device from a manufacturer to a new owner (customer or operational domain).
That document provides a serialization of the voucher data to JSON <xref target="RFC8259"/> with cryptographic signing according to the Cryptographic Message Syntax (CMS) <xref target="RFC5652"/>.
The resulting voucher artifact has the media type "application/voucher-cms+json".</t>
      <t>This document provides cryptographic signing of the JSON voucher data in form of JSON Web Signature (JWS) <xref target="RFC7515"/>
and the media type "application/voucher-jws+json".
The encoding specified in this document is used by <xref target="I-D.ietf-anima-brski-prm"/>
and may be more handy for use cases already using Javascript Object Signing and Encryption (JOSE).
This document should be considered as enhancement of <xref target="I-D.draft-ietf-anima-rfc8366bis"/>,<br/>
as it provides a new voucher form with media type "application/voucher-jws+json" and the related serialization. 
It does not extend the YANG definition of <xref target="I-D.draft-ietf-anima-rfc8366bis"/>.</t>
      <t>Another example of an enhancement of <xref target="I-D.draft-ietf-anima-rfc8366bis"/> is <xref target="I-D.ietf-anima-constrained-voucher"/>. 
It provides the serialization of voucher data to CBOR <xref target="RFC8949"/>, 
with the signature in form of COSE <xref target="RFC8812"/> and the media type "application/voucher-cose+cbor".</t>
      <t>With the availability of different encoded vouchers, it is up to an industry specific application statement to indicate/decide which voucher signature format is to be used.
There is no provision across the different voucher signature formats that a receiver could safely recognize which format it uses unless additional context is provided.
For example, <xref target="BRSKI"/> provides this context via the media type for the voucher artifact.
This document utilizes the optional "typ" (Type) Header Parameter of JWS <xref target="RFC7515"/> to provide information about the signed object.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <t>This document uses the following terms:</t>
      <dl>
        <dt>JSON Voucher Data:</dt>
        <dd>
          <t>An unsigned JSON representation of the voucher data.</t>
        </dd>
        <dt>JWS Voucher:</dt>
        <dd>
          <t>A JWS structure signing the JSON Voucher Data.</t>
        </dd>
        <dt>Voucher:</dt>
        <dd>
          <t>A short form for voucher artifact and refers to the signed statement from the MASA service that indicates to a pledge the cryptographic identity of the domain it should trust, per <xref target="I-D.draft-ietf-anima-rfc8366bis"/>.</t>
        </dd>
        <dt>Voucher Data:</dt>
        <dd>
          <t>The raw (serialized) representation of "ietf-voucher" YANG module without any enclosing signature, per <xref target="I-D.draft-ietf-anima-rfc8366bis"/>.</t>
        </dd>
      </dl>
      <t>This document uses the following encoding notations:</t>
      <dl>
        <dt>BASE64URL(OCTETS):</dt>
        <dd>
          <t>Denotes the base64url encoding of OCTETS, per <xref section="2" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
        <dt>UTF8(STRING):</dt>
        <dd>
          <t>Denotes the octets of the UTF-8 <xref target="RFC3629"/> representation of STRING, per <xref section="1" sectionFormat="of" target="RFC7515"/>.</t>
        </dd>
      </dl>
    </section>
    <section anchor="voucher-artifact-with-json-web-signature">
      <name>Voucher Artifact with JSON Web Signature</name>
      <t><xref target="RFC7515"/> defines the following serializations for JWS:</t>
      <ol spacing="normal" type="1"><li>"JWS Compact Serialization" in <xref section="7.1" sectionFormat="of" target="RFC7515"/></li>
        <li>
          <t>"JWS JSON Serialization" in <xref section="7.2" sectionFormat="of" target="RFC7515"/>
          </t>
          <ul spacing="normal">
            <li>"General JWS JSON Serialization Syntax" in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/></li>
            <li>"Flattened JWS JSON Serialization Syntax" in <xref section="7.2.2" sectionFormat="of" target="RFC7515"/></li>
          </ul>
        </li>
      </ol>
      <t>A "JWS JSON Serialization Overview" is given in <xref section="3.2" sectionFormat="of" target="RFC7515"/> and more details on the JWS serializations in <xref section="7" sectionFormat="of" target="RFC7515"/>.
This document makes use of the "General JWS JSON Serialization Syntax" of <xref target="RFC7515"/> to support multiple signatures,
as already supported by <xref target="RFC8366"/> for CMS-signed vouchers.</t>
      <section anchor="voucher-representation-in-general-jws-json-serialization-syntax">
        <name>Voucher Representation in General JWS JSON Serialization Syntax</name>
        <t>JWS voucher artifacts MUST use the "General JWS JSON Serialization Syntax" defined in <xref section="7.2.1" sectionFormat="of" target="RFC7515"/>.
The following figure summarizes the serialization of JWS voucher artifacts:</t>
        <figure anchor="VoucherGeneralJWSFigure">
          <name>Voucher Representation in General JWS JSON Serialization Syntax (JWS Voucher)</name>
          <artwork align="left"><![CDATA[
    {
      "payload": BASE64URL(UTF8(JSON Voucher Data)),
      "signatures": [
        {
          "protected": BASE64URL(UTF8(JWS Protected Header)),
          "signature": BASE64URL(JWS Signature)
        }
      ]
    }
]]></artwork>
        </figure>
        <t>The JSON Voucher Data MUST be UTF-8 encoded to become the octet-based JWS Payload defined in <xref target="RFC7515"/>.
The JWS Payload is further base64url-encoded to become the string value of the "payload" member as described in <xref section="3.2" sectionFormat="of" target="RFC7515"/>.
The octets of the UTF-8 representation of the JWS Protected Header are base64url-encoded to become the string value of the "protected" member.
The generated JWS Signature is base64url-encoded to become the string value of the "signature" member.</t>
      </section>
      <section anchor="json-voucher-data">
        <name>JSON Voucher Data</name>
        <t>The JSON Voucher Data is an unsigned JSON document <xref target="RFC8259"/> that conforms with the data model described by the ietf-voucher YANG module <xref target="RFC7950"/> defined in <xref section="5.3" sectionFormat="of" target="I-D.draft-ietf-anima-rfc8366bis"/> and is encoded using the rules defined in <xref target="RFC7951"/>.
The following figure provides an example of JSON Voucher Data:</t>
        <figure anchor="VoucherGeneralJWSVoucherPayloadFigure">
          <name>JSON Voucher Data Example</name>
          <artwork align="left"><![CDATA[
    {
      "ietf-voucher:voucher": {
        "assertion": "logged",
        "serial-number": "0123456789",
        "nonce": "5742698422680472",
        "created-on": "2022-07-08T03:01:24.618Z",
        "pinned-domain-cert": "base64encodedvalue=="
      }
    }
]]></artwork>
        </figure>
      </section>
      <section anchor="jws-protected-header">
        <name>JWS Protected Header</name>
        <t>The JWS Protected Header defined in <xref target="RFC7515"/> uses the standard header parameters "alg", "typ", and "x5c".
The "alg" parameter MUST contain the algorithm type used to create the signature, e.g., "ES256" as defined in <xref section="4.1.1" sectionFormat="of" target="RFC7515"/>.
If present, the "typ" parameter SHOULD contain the value "voucher-jws+json" as defined in <xref section="4.1.9" sectionFormat="of" target="RFC7515"/>.
If X.509 (PKIX) certificates <xref target="RFC5280"/> are used, the "x5c" parameter SHOULD contain the base64-encoded (not base64url-encoded) X.509 v3 (DER) certificate and chain as defined in <xref section="4.1.6" sectionFormat="of" target="RFC7515"/>.</t>
        <t>Implementation Note:
base64-encoded values opposed to base64url-encoded values may contain slashes ('/').
JSON <xref target="RFC8259"/> optionally allows to escape these with backslashes ('\').
Hence, depending on the JSON parser/serializer implementation used, they may or may not be included.
JWS Voucher parsers must be prepared accordingly to extract certificates correctly.</t>
        <t>To validate voucher signatures all certificates of the certificate chain are required up to the trust anchor,
Note, to establish trust the trust anchor SHOULD be provided out-of-band upfront.
This is consistent with <xref section="5.5.2" sectionFormat="of" target="BRSKI"/>.</t>
        <t>The following figure gives an example of a JWS Protected Header:</t>
        <figure anchor="VoucherGeneralJWSProtectedHeaderFigure">
          <name>JWS Protected Header Example</name>
          <artwork align="left"><![CDATA[
    {
      "alg": "ES256",
      "typ": "voucher-jws+json",
      "x5c": [
        "base64encodedvalue1==",
        "base64encodedvalue2=="
      ]
    }  
]]></artwork>
        </figure>
      </section>
      <section anchor="jws-signature">
        <name>JWS Signature</name>
        <t>The JWS Signature is generated over the JWS Protected Header and the JWS Payload (= UTF-8 encoded JSON Voucher Data) as described in <xref section="5.1" sectionFormat="of" target="RFC7515"/>.</t>
      </section>
    </section>
    <section anchor="privacy-considerations">
      <name>Privacy Considerations</name>
      <t>The Voucher Request reveals the IDevID of the component (Pledge) that is in the process of bootstrapping.</t>
      <t>This request occurs via HTTP-over-TLS, however, for the Pledge-to-Registrar TLS connection, the Pledge is provisionally accepting the Registrar server certificate.
Hence it is subject to disclosure by a Dolev-Yao attacker (a "malicious messenger") <xref target="ON-PATH"/>, as explained in <xref section="10.2" sectionFormat="of" target="BRSKI"/>.</t>
      <t>The use of a JWS header brings no new privacy considerations.</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>The issues of how <xref target="I-D.draft-ietf-anima-rfc8366bis"/> vouchers are used in a <xref target="BRSKI"/> system is addressed in <xref section="11" sectionFormat="of" target="BRSKI"/>.
This document does not change any of those issues, it just changes the signature technology used for voucher request and response artifacts.</t>
      <t><xref section="9" sectionFormat="of" target="SZTP"/> deals with voucher use in Secure Zero Touch Provisioning, for which this document also makes no changes to security.</t>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <section anchor="media-type-registry">
        <name>Media-Type Registry</name>
        <t>This section registers the "application/voucher-jws+json" in the "Media Types" registry.</t>
        <section anchor="applicationvoucher-jwsjson">
          <name>application/voucher-jws+json</name>
          <artwork><![CDATA[
Type name:  application
Subtype name:  voucher-jws+json
Required parameters:  none
Optional parameters:  none
Encoding considerations:  JWS+JSON vouchers are JOSE objects
                          signed with one or multiple signers.
Security considerations:  See section [Security Considerations]
Interoperability considerations:  The format is designed to be
  broadly interoperable.
Published specification:  [THIS RFC].
Applications that use this media type:  ANIMA, 6tisch, and other
  zero-touch bootstrapping/provisioning solutions
Additional information:
  Magic number(s):  None
  File extension(s):  .vjj
  Macintosh file type code(s):  none
Person & email address to contact for further information:  IETF
  ANIMA WG
Intended usage:  LIMITED
Restrictions on usage:  NONE
Author:  ANIMA WG
Change controller:  IETF
Provisional registration? (standards tree only):  NO
]]></artwork>
        </section>
      </section>
    </section>
    <section anchor="acknowledgments">
      <name>Acknowledgments</name>
      <t>We would like to thank the various reviewers for their input,
in particular Steffen Fries, Ingo Wenda, Esko Dijk and Toerless Eckert.
Thanks for the supporting PoC implementations to Hong Rui Li and He Peng Jia.</t>
    </section>
    <section anchor="examples">
      <name>Examples</name>
      <t>These examples are folded according to <xref target="RFC8792"/> Single Backslash rule.</t>
      <section anchor="example-pledge-voucher-request-pvr-from-pledge-to-registrar">
        <name>Example Pledge Voucher Request - PVR (from Pledge to Registrar)</name>
        <t>The following is an example request sent from a Pledge to the Registrar, in "General JWS JSON Serialization".</t>
        <figure anchor="ExamplePledgeVoucherRequestfigure">
          <name>Example Pledge Voucher Request - PVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdDp2b3VjaGVyIjp7InNlcmlhbC\
1udW1iZXIiOiIwMTIzNDU2Nzg5Iiwibm9uY2UiOiI2R3RuK1pRS04ySHFERlZrQkV4Wk\
xRPT0iLCJjcmVhdGVkLW9uIjoiMjAyMi0wNy0wOFQwODo0MDo0Mi44MjBaIiwicHJveG\
ltaXR5LXJlZ2lzdHJhci1jZXJ0IjoiTUlJQjRqQ0NBWWlnQXdJQkFnSUdBWFk3MmJiWk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweU1ERXlNRG\
N3TmpFNE1USmFGdzB6TURFeU1EY3dOakU0TVRKYU1ENHhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhHREFXQmdOVkJBTU1EMFJ2YldGcG\
JsSmxaMmx6ZEhKaGNqQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJCaz\
E2Sy9pNzlvUmtLNVliZVBnOFVTUjgvdXMxZFBVaVpITXRva1NkcUtXNWZuV3NCZCtxUk\
w3V1JmZmVXa3lnZWJvSmZJbGx1cmNpMjV3bmhpT1ZDR2plekI1TUIwR0ExVWRKUVFXTU\
JRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREhEQU9CZ05WSFE4QkFmOEVCQU1DQjRBd1\
NBWURWUjBSQkVFd1A0SWRjbVZuYVhOMGNtRnlMWFJsYzNRdWMybGxiV1Z1Y3kxaWRDNX\
VaWFNDSG5KbFoybHpkSEpoY2kxMFpYTjBOaTV6YVdWdFpXNXpMV0owTG01bGREQUtCZ2\
dxaGtqT1BRUURBZ05JQURCRkFpQnhsZEJoWnEwRXY1SkwyUHJXQ3R5UzZoRFlXMXlDTy\
9SYXVicEM3TWFJRGdJaEFMU0piZ0xuZ2hiYkFnMGRjV0ZVVm8vZ0dOMC9qd3pKWjBTbD\
JoNHhJWGsxIn19",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQitUQ0NBYUNnQXdJQkFnSUdBWG5WanNVNU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQ0\
FYRFRJeE1EWXdOREExTkRZeE5Gb1lEems1T1RreE1qTXhNak0xT1RVNVdqQlNNUXN3Q1\
FZRFZRUUdFd0pCVVRFVk1CTUdBMVVFQ2d3TVNtbHVaMHBwYm1kRGIzSndNUk13RVFZRF\
ZRUUZFd293TVRJek5EVTJOemc1TVJjd0ZRWURWUVFEREE1S2FXNW5TbWx1WjBSbGRtbG\
paVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCQzc5bGlhUmNCalpjRU\
VYdzdyVWVhdnRHSkF1SDRwazRJNDJ2YUJNc1UxMWlMRENDTGtWaHRVVjIxbXZhS0N2TX\
gyWStTTWdROGZmd0wyM3ozVElWQldqZFRCek1Dc0dDQ3NHQVFVRkJ3RWdCQjhXSFcxaG\
MyRXRkR1Z6ZEM1emFXVnRaVzV6TFdKMExtNWxkRG81TkRRek1COEdBMVVkSXdRWU1CYU\
FGRlFMak56UFwvU1wva291alF3amc1RTVmdndjWWJNQk1HQTFVZEpRUU1NQW9HQ0NzR0\
FRVUZCd01DTUE0R0ExVWREd0VCXC93UUVBd0lIZ0RBS0JnZ3Foa2pPUFFRREFnTkhBRE\
JFQWlCdTN3UkJMc0pNUDVzTTA3MEgrVUZyeU5VNmdLekxPUmNGeVJST2xxcUhpZ0lnWE\
NtSkxUekVsdkQycG9LNmR4NmwxXC91eW1UbmJRRERmSmxhdHVYMlJvT0U9Il0sInR5cC\
I6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "abVg4TDGzSTjVHkQlNeIW3ABu5ZXdMl1cEqwcIAlHFW4BrlGbO\
-DRTKfyCOGxSW49-ktJcrVlYgKqC4xmZoy0Q"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-parboiled-registrar-voucher-request-rvr-from-registrar-to-masa">
        <name>Example Parboiled Registrar Voucher Request - RVR (from Registrar to MASA)</name>
        <t>The term parboiled refers to food which is partially cooked.
In <xref target="BRSKI"/>, the term refers to a Pledge voucher-request (PVR) which has been received by the Registrar, and then has been processed by the Registrar ("cooked"), and is now being forwarded to the MASA.</t>
        <t>The following is an example Registrar voucher-request (RVR) sent from the Registrar to the MASA, in "General JWS JSON Serialization".
Note that the previous PVR can be seen in the payload as "prior-signed-voucher-request".</t>
        <figure anchor="ExampleParboiledRegistrarVoucherRequestfigure">
          <name>Example Parboiled Registrar Voucher Request - RVR</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXItcmVxdWVzdDp2b3VjaGVyIjp7InNlcmlhbC\
1udW1iZXIiOiIwMTIzNDU2Nzg5IiwiaWRldmlkLWlzc3VlciI6IkJCZ3dGb0FVVkF1TT\
NNLzlMK1NpNk5EQ09Ea1RsKy9CeGhzPSIsIm5vbmNlIjoiNkd0bitaUUtOMkhxREZWa0\
JFeFpMUT09IiwicHJpb3Itc2lnbmVkLXZvdWNoZXItcmVxdWVzdCI6ImV5SndZWGxzYj\
JGa0lqb2laWGxLY0ZwWVVtMU1XRnAyWkZkT2IxcFlTWFJqYlZaNFpGZFdlbVJFY0RKaU\
0xWnFZVWRXZVVscWNEZEpiazVzWTIxc2FHSkRNWFZrVnpGcFdsaEphVTlwU1hkTlZFbD\
ZUa1JWTWs1Nlp6VkphWGRwWW0wNWRWa3lWV2xQYVVreVVqTlNkVXN4Y0ZKVE1EUjVVMG\
hHUlZKc1duSlJhMVkwVjJ0NFVsQlVNR2xNUTBwcVkyMVdhR1JIVm10TVZ6bDFTV3B2YV\
UxcVFYbE5hVEIzVG5rd2QwOUdVWGRQUkc4d1RVUnZNRTFwTkRSTmFrSmhTV2wzYVdOSV\
NuWmxSMngwWVZoU05VeFlTbXhhTW14NlpFaEthR05wTVdwYVdFb3dTV3B2YVZSVmJFcF\
JhbEp4VVRCT1FsZFhiRzVSV0dSS1VXdEdibE5WWkVKWFJtc3pUVzFLYVZkck1VSmlNR1\
JFVVROR1NGVXdNREJQVlVwQ1ZGVk9UbEpHVmpSU1dIQkNWV3RLYmxSc1drTlJWemxPVV\
RKemVFNVdSblZXYm5Cb1ZucFdjMWw2VGs1bFJWSlZVVlY0UTFvd05WZFJhMFpxVkZWS1\
IxUnVRbXRTTVZZMFVraHdRbFJyU201VWJGcERVVlV4VGxGdGVGTmlSMDE2Vld0U1VsWk\
ZSbXhTYm1OM1pWVXhSVkpZYkU1U1IwNHpWRzF3Ums1Rk1WVlRiVVpIWkhwQ05sUlZVa1\
psVlRGRldUTmtUMkZyVlRCVVZsSkxXVlV4UlU1SWFFWmxhMFpUVVcxa1QxWnJTa0ppTU\
RGRVlYcEZNVlZYTlZkbGJVWllUbGQ0YWswd01UUlNSbEpDVkVWS2JsUnNXa05SVjA1T1\
VXdGFUMk5IVWtoV1dHaElVa1ZHV0ZGdFpFOVdhMHBDVkZVeFJVMUdTakpaYkdSSFkwZE\
tjMU50ZUdGTmJYZzJXa1ZvUzJGSFRuRlJiSEJPVVdzeFNGRnViSGhTTVU1T1RrUnNRbG\
93VmtoUk1FNTRVakZPVGs1RWJFSmtNRlpKVVZSQ1NsRlZTa05oZWtVeVUzazVjRTU2Yk\
haVmJYUk1UbFpzYVZwV1FtNVBSbFpVVldwbmRtUllUWGhhUmtKV1lWWndTVlJZVW5aaE\
1VNXJZMVYwV0U1WFduVldNMDVEV2tOMGVGVnJkek5XTVVwdFdtMVdXR0V6Ykc1YVYwcD\
JVMjFhU21KSGVERmpiVTV3VFdwV00ySnRhSEJVTVZwRVVqSndiR1ZyU1RGVVZVbDNVak\
JGZUZaWFVrdFZWa1pZVkZWS1VsSXdUa1JqTUdSQ1ZWWldSMUZ1WkU1UmEwcHVXak5LUT\
Fvd1ZrZFJiRVpxVWtWb1JWRlZPVU5hTURWWFUwWkZORkZyUm0xUFJWWkRVVlV4UkZGcV\
VrSmtNVTVDVjFWU1YxVnFRbE5SYTFaR1pERkJNRk5YVW1waVZscDFXVlpvVDAxSFRuUl\
NibXhOVjBaS2MxbDZUbEprVjAxNVlrZDRhVll4V2pGWk0ydDRZVmRTUkU1WVZtRlhSaz\
VFVTBjMVMySkdiM2xpU0hCclUwVndiMWt5YTNoTlJuQlpWR3BDVDJGVVZqWlpWbVJYWk\
Vad1dFNVljRTFXTUc5M1ZFY3dNV0pIVWtWUlZYUkRXakprZUdGSGRIRlVNVUpTVlZWU1\
Fsb3dOVXBSVlZKRFVtdEdjRkZ1YUhOYVJVcHZWMjVGZDFKWVdURlRhM2Q1VlVoS1dGRX\
pValZWZWxwdlVrWnNXRTFZYkVSVWVUbFRXVmhXYVdORlRUTlVWMFpLVWtka1NtRkZSaz\
FWTUhCcFdqQjRkVm95YUdsWmEwWnVUVWRTYWxZd1dsWldiVGgyV2pCa1QwMURPWEZrTT\
NCTFYycENWR0pFU205T1NHaEtWMGR6ZUVsdU1Ua2lMQ0p6YVdkdVlYUjFjbVZ6SWpwYm\
V5SndjbTkwWldOMFpXUWlPaUpsZVVvMFRsZE5hVTlzYzJsVVZXeEtVV2wwVlZFd1RrSl\
pWVTV1VVZoa1NsRnJSbTVUVldSQ1YwYzFWMkZ1VGxaT1ZURkNZakJrUkZFelJraFZNRE\
F3VDFWS1FsUlZUazVTUkVJMFVUTndRbE5yU201VWJGcERVVlpzVlZGWGRFZFZhekZUVm\
xoa1JtUXhiRVZXYkVaU1V6QlNRbVZGZEdoV2VsWjFWVEl4YzJSV2IzZFVibHBxWW10R0\
5GSnVjRUpXYTBwdVZHeGFRMUZWTVU1U1IzUjNZMGRLZEZwRmRHaFdlbFoxVm10a1YyVn\
RVa1pVYTBwT1VUQkdXVkpHVWtwbFJURkZWMWhrVDFKRlJYaFVhMUphWlVVMVIySXhiRV\
ZsYlhNeFZERlNjbVZGTVhGVVdHaE9ZV3N3ZUZReFVsWk9WbVJ4VVd4T1RsVllUak5STV\
VaYVVrWmFVbFZWWkVaa01IQkRWbFpTUmxack1VTlVWV1JDVFZaV1JsRXlaRE5VVms1MF\
lraFdZVTFJUW5kWmJURnJVa2RKZWxOdVpFNVZhekV6VWxaR1dsSkdXbEpWVlZwR1pEST\
VNMVJXVWtwbGF6VkZWbFJLVDJWdFl6RlVWa3BxWkRCYVVsZFZVbGRWVmtaRlVrVkZNVk\
15UmxoT1Z6VlVZbGQ0TVZkcVFsTmlSMUowWWtkd1lWWkZTbUZVVlVwT1VqQktOV05WWk\
ZSVVZGRTFVVmRrUmxJd1RrUmpWV1JVVkZSUk5WRllaRVpUUlVWM1UxVkdRMUY2WXpWaV\
IyeG9WVzFPUTJGc2NHcFNWVlpaWkhwa2VWWlhWbWhrYmxKSVUydEdNVk5FVW5kaGVsSk\
tUa1JLTWxsVlNrNWpNVlY0VFZkc1RWSkZUa1JVUjNSWFlVaFNWbFpxU1hoaVdGcG9Vek\
JPTWxSWVozbFhVM1JVVkZka1VrOUhXbTFrTUhkNVRUTnZlbFpGYkZkUmJHUnhXa1pTUT\
JWck1VUmpNR1JFVVROT1NGRldSbFpTYTBvelVsZGtRMUZxYUZoVFJtTjRZVWROZVZKWV\
VtdFNNVm8yV2tWTk1XVnRSbGhXYmxKaFZucFdObFJHWkV0TlJYaDBUbGQ0YTFKSE9ERl\
VhMUpTWldzeFEwOUZaRUpOVmxaclUxaGtVbGRWTVVOWlZVWkhVbXhHVFdGck5UWlZSbm\
QyVlRGM2RtRXlPVEZoYkVZellXMWpNVkpVVm0xa2JtUnFWMWRLVGxGck1VaFJWRVpXV2\
tWd1VsVlZNVTVSVnpsSVVUQk9lbEl3UmxKV1ZWcERaREF4UkZSVlJUQlNNRVY0VmxkU1\
JXUXdWa05ZUXprelZWVldRbVF3YkVsYU1GSkNVekJLYmxvelJtOWhNbkJRVlVaR1VsSk\
ZSbTVVYTJoQ1VrVktSbEZYYkVOa1ZFNHpWV3RLVFdNd2NFNVZSRlo2VkZSQk0wMUZaM0\
pXVlZwNVpWVTFWazV0WkV4bGEzaFFWVzFPUjJWV1NsTlVNbmg0WTFWb2NGb3diRzVYUl\
U1MFUydDRWV1ZyVm5Oa2ExRjVZMGM1VEU1dFVqUk9iWGQ0V0VNNU1XVlhNVlZpYlVwU1\
VrVlNiVk50ZUdoa1NGWlpUV3hLZGxRd1ZUbEpiREJ6U1c1U05XTkRTVFpKYmxwMlpGZE\
9iMXBZU1hSaGJtUjZTekp3ZW1JeU5HbE1RMHBvWWtkamFVOXBTa1pWZWtreFRtbEtPU0\
lzSW5OcFoyNWhkSFZ5WlNJNkltRmlWbWMwVkVSSGVsTlVhbFpJYTFGc1RtVkpWek5CUW\
5VMVdsaGtUV3d4WTBWeGQyTkpRV3hJUmxjMFFuSnNSMkpQTFVSU1ZFdG1lVU5QUjNoVF\
Z6UTVMV3QwU21OeVZteFpaMHR4UXpSNGJWcHZlVEJSSW4xZGZRPT0iLCJjcmVhdGVkLW\
9uIjoiMjAyMi0wNy0wOFQwODo0MDo0Mi44NDhaIn19",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQm96Q0NBVXFnQXdJQkFnSUdBVzBlTHVJRk\
1Bb0dDQ3FHU000OUJBTUNNRFV4RXpBUkJnTlZCQW9NQ2sxNVFuVnphVzVsYzNNeERUQU\
xCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQmxSbGMzUkRRVEFlRncweE9UQTVNVE\
V3TWpNM016SmFGdzB5T1RBNU1URXdNak0zTXpKYU1GUXhFekFSQmdOVkJBb01DazE1UW\
5WemFXNWxjM014RFRBTEJnTlZCQWNNQkZOcGRHVXhMakFzQmdOVkJBTU1KVkpsWjJsem\
RISmhjaUJXYjNWamFHVnlJRkpsY1hWbGMzUWdVMmxuYm1sdVp5QkxaWGt3V1RBVEJnY3\
Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVQ2eFZ2QXZxVHoxWlVpdU5XaFhwUXNrYV\
B5N0FISFFMd1hpSjBpRUx0NnVOUGFuQU4wUW5XTVlPXC8wQ0RFaklrQlFvYnc4WUtxan\
R4SkhWU0dUajlLT295Y3dKVEFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNESERBT0JnTl\
ZIUThCQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnWXIyTGZxb2FDS0\
RGNFJBY01tSmkrTkNacWRTaXVWdWdJU0E3T2hLUnEzWUNJRHhuUE1NbnBYQU1UclBKdV\
BXeWNlRVIxMVB4SE9uKzBDcFNIaTJxZ3BXWCIsIk1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDZcL1NjWTVQSmlidm\
dIVEIrRlwvUVRqZ2VsSEd5MVlLcHdjTk1jc1N5YWpSVEJETUJJR0ExVWRFd0VCXC93UU\
lNQVlCQWY4Q0FRRXdEZ1lEVlIwUEFRSFwvQkFRREFnSUVNQjBHQTFVZERnUVdCQlRvWk\
lNelFkc0RcL2pcLytnWFwvN2NCSnVjSFwvWG1qQUtCZ2dxaGtqT1BRUURBZ05KQURCR0\
FpRUF0eFEzK0lMR0JQSXRTaDRiOVdYaFhOdWhxU1A2SCtiXC9MQ1wvZlZZRGpRNm9DSV\
FERzJ1UkNIbFZxM3loQjU4VFhNVWJ6SDgrT2xoV1V2T2xSRDNWRXFEZGNRdz09Il0sIn\
R5cCI6InZvdWNoZXItandzK2pzb24iLCJhbGciOiJFUzI1NiJ9",
    "signature": "0fzuqVdyhemWsu_HQeF-CmQwJeLp9IStNf-bWZwz6SojrEOR4a\
Dq6VStyG8eWXjGHNZiRyyLJo7RP1rKatuS2w"
  }]
}
]]></artwork>
        </figure>
      </section>
      <section anchor="example-voucher-response-from-masa-to-pledge-via-registrar">
        <name>Example Voucher Response (from MASA to Pledge, via Registrar)</name>
        <t>The following is an example voucher response from MASA to Pledge via Registrar, in "General JWS JSON Serialization".</t>
        <figure anchor="ExampleVoucherResponsefigure">
          <name>Example Voucher Response</name>
          <artwork align="left"><![CDATA[
=============== NOTE: '\' line wrapping per RFC 8792 ================

{
  "payload": "eyJpZXRmLXZvdWNoZXI6dm91Y2hlciI6eyJhc3NlcnRpb24iOiJsb2\
dnZWQiLCJzZXJpYWwtbnVtYmVyIjoiMDEyMzQ1Njc4OSIsIm5vbmNlIjoiZGRoSGQ4Ml\
FpUGtzMDBTck1USTlEUT09IiwiY3JlYXRlZC1vbiI6IjIwMjItMDctMDdUMTc6NDc6MD\
EuODkwWiIsInBpbm5lZC1kb21haW4tY2VydCI6Ik1JSUJwRENDQVVtZ0F3SUJBZ0lHQV\
cwZUx1SCtNQW9HQ0NxR1NNNDlCQU1DTURVeEV6QVJCZ05WQkFvTUNrMTVRblZ6YVc1bG\
MzTXhEVEFMQmdOVkJBY01CRk5wZEdVeER6QU5CZ05WQkFNTUJsUmxjM1JEUVRBZUZ3MH\
hPVEE1TVRFd01qTTNNekphRncweU9UQTVNVEV3TWpNM016SmFNRFV4RXpBUkJnTlZCQW\
9NQ2sxNVFuVnphVzVsYzNNeERUQUxCZ05WQkFjTUJGTnBkR1V4RHpBTkJnTlZCQU1NQm\
xSbGMzUkRRVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCT2t2a1RIdT\
hRbFQzRkhKMVVhSTcrV3NIT2IwVVMzU0FMdEc1d3VLUURqaWV4MDYvU2NZNVBKaWJ2Z0\
hUQitGL1FUamdlbEhHeTFZS3B3Y05NY3NTeWFqUlRCRE1CSUdBMVVkRXdFQi93UUlNQV\
lCQWY4Q0FRRXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CMEdBMVVkRGdRV0JCVG9aSU16UW\
RzRC9qLytnWC83Y0JKdWNIL1htakFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBdHhRMy\
tJTEdCUEl0U2g0YjlXWGhYTnVocVNQNkgrYi9MQy9mVllEalE2b0NJUURHMnVSQ0hsVn\
EzeWhCNThUWE1VYnpIOCtPbGhXVXZPbFJEM1ZFcURkY1F3PT0ifX0",
  "signatures": [{
    "protected": "eyJ4NWMiOlsiTUlJQmt6Q0NBVGlnQXdJQkFnSUdBV0ZCakNrWU\
1Bb0dDQ3FHU000OUJBTUNNRDB4Q3pBSkJnTlZCQVlUQWtGUk1SVXdFd1lEVlFRS0RBeE\
thVzVuU21sdVowTnZjbkF4RnpBVkJnTlZCQU1NRGtwcGJtZEthVzVuVkdWemRFTkJNQj\
RYRFRFNE1ERXlPVEV3TlRJME1Gb1hEVEk0TURFeU9URXdOVEkwTUZvd1R6RUxNQWtHQT\
FVRUJoTUNRVkV4RlRBVEJnTlZCQW9NREVwcGJtZEthVzVuUTI5eWNERXBNQ2NHQTFVRU\
F3d2dTbWx1WjBwcGJtZERiM0p3SUZadmRXTm9aWElnVTJsbmJtbHVaeUJMWlhrd1dUQV\
RCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTQzZiZUxBbWVxMVZ3NmlRclJzOF\
IwWlcrNGIxR1d5ZG1XczJHQU1GV3diaXRmMm5JWEgzT3FIS1Z1OHMyUnZpQkdOaXZPS0\
dCSEh0QmRpRkVaWnZiN294SXdFREFPQmdOVkhROEJBZjhFQkFNQ0I0QXdDZ1lJS29aSX\
pqMEVBd0lEU1FBd1JnSWhBSTRQWWJ4dHNzSFAyVkh4XC90elVvUVwvU3N5ZEwzMERRSU\
5FdGNOOW1DVFhQQWlFQXZJYjNvK0ZPM0JUbmNMRnNhSlpSQWtkN3pPdXNuXC9cL1pLT2\
FFS2JzVkRpVT0iXSwidHlwIjoidm91Y2hlci1qd3MranNvbiIsImFsZyI6IkVTMjU2In\
0",
    "signature": "y1HLYBFlwouf42XWSKUWjeYQHnG2Q6A4bjA7hvTkB3z1dPwTUl\
jPHtuN2Qex6gDxTfaSiKeoXGsOD4JWOgQJPg"
  }]
}
]]></artwork>
        </figure>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="BRSKI">
          <front>
            <title>Bootstrapping Remote Secure Key Infrastructure (BRSKI)</title>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <author fullname="M. Behringer" initials="M." surname="Behringer"/>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <date month="May" year="2021"/>
            <abstract>
              <t>This document specifies automated bootstrapping of an Autonomic Control Plane. To do this, a Secure Key Infrastructure is bootstrapped. This is done using manufacturer-installed X.509 certificates, in combination with a manufacturer's authorizing service, both online and offline. We call this process the Bootstrapping Remote Secure Key Infrastructure (BRSKI) protocol. Bootstrapping a new device can occur when using a routable address and a cloud service, only link-local connectivity, or limited/disconnected networks. Support for deployment models with less stringent security requirements is included. Bootstrapping is complete when the cryptographic identity of the new key infrastructure is successfully deployed to the device. The established secure connection can be used to deploy a locally issued certificate to the device as well.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8995"/>
          <seriesInfo name="DOI" value="10.17487/RFC8995"/>
        </reference>
        <reference anchor="I-D.draft-ietf-anima-rfc8366bis">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="Kent Watsen" initials="K." surname="Watsen">
              <organization>Watsen Networks</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software</organization>
            </author>
            <author fullname="Max Pritikin" initials="M." surname="Pritikin">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
              <organization>Futurewei Technologies Inc.</organization>
            </author>
            <author fullname="Qiufang Ma" initials="Q." surname="Ma">
              <organization>Huawei</organization>
            </author>
            <date day="4" month="March" year="2024"/>
            <abstract>
              <t>   This document defines a strategy to securely assign a pledge to an
   owner using an artifact signed, directly or indirectly, by the
   pledge's manufacturer.  This artifact is known as a "voucher".

   This document defines an artifact format as a YANG-defined JSON or
   CBOR document that has been signed using a variety of cryptographic
   systems.

   The voucher artifact is normally generated by the pledge's
   manufacturer (i.e., the Manufacturer Authorized Signing Authority
   (MASA)).

   This document updates RFC8366, merging a number of extensions into
   the YANG.  The RFC8995 voucher request is also merged into this
   document.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-rfc8366bis-11"/>
        </reference>
        <reference anchor="RFC5280">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC7515">
          <front>
            <title>JSON Web Signature (JWS)</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <author fullname="J. Bradley" initials="J." surname="Bradley"/>
            <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
            <date month="May" year="2015"/>
            <abstract>
              <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7515"/>
          <seriesInfo name="DOI" value="10.17487/RFC7515"/>
        </reference>
        <reference anchor="RFC8259">
          <front>
            <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
            <author fullname="T. Bray" initials="T." role="editor" surname="Bray"/>
            <date month="December" year="2017"/>
            <abstract>
              <t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format. It was derived from the ECMAScript Programming Language Standard. JSON defines a small set of formatting rules for the portable representation of structured data.</t>
              <t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="90"/>
          <seriesInfo name="RFC" value="8259"/>
          <seriesInfo name="DOI" value="10.17487/RFC8259"/>
        </reference>
        <reference anchor="RFC2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC8174">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="SZTP">
          <front>
            <title>Secure Zero Touch Provisioning (SZTP)</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="I. Farrer" initials="I." surname="Farrer"/>
            <author fullname="M. Abrahamsson" initials="M." surname="Abrahamsson"/>
            <date month="April" year="2019"/>
            <abstract>
              <t>This document presents a technique to securely provision a networking device when it is booting in a factory-default state. Variations in the solution enable it to be used on both public and private networks. The provisioning steps are able to update the boot image, commit an initial configuration, and execute arbitrary scripts to address auxiliary needs. The updated device is subsequently able to establish secure connections with other systems. For instance, a device may establish NETCONF (RFC 6241) and/or RESTCONF (RFC 8040) connections with deployment-specific network management systems.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8572"/>
          <seriesInfo name="DOI" value="10.17487/RFC8572"/>
        </reference>
        <reference anchor="RFC3629">
          <front>
            <title>UTF-8, a transformation format of ISO 10646</title>
            <author fullname="F. Yergeau" initials="F." surname="Yergeau"/>
            <date month="November" year="2003"/>
            <abstract>
              <t>ISO/IEC 10646-1 defines a large character set called the Universal Character Set (UCS) which encompasses most of the world's writing systems. The originally proposed encodings of the UCS, however, were not compatible with many current applications and protocols, and this has led to the development of UTF-8, the object of this memo. UTF-8 has the characteristic of preserving the full US-ASCII range, providing compatibility with file systems, parsers and other software that rely on US-ASCII values but are transparent to other values. This memo obsoletes and replaces RFC 2279.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="63"/>
          <seriesInfo name="RFC" value="3629"/>
          <seriesInfo name="DOI" value="10.17487/RFC3629"/>
        </reference>
        <reference anchor="RFC5652">
          <front>
            <title>Cryptographic Message Syntax (CMS)</title>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <date month="September" year="2009"/>
            <abstract>
              <t>This document describes the Cryptographic Message Syntax (CMS). This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary message content. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="70"/>
          <seriesInfo name="RFC" value="5652"/>
          <seriesInfo name="DOI" value="10.17487/RFC5652"/>
        </reference>
        <reference anchor="RFC7950">
          <front>
            <title>The YANG 1.1 Data Modeling Language</title>
            <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7950"/>
          <seriesInfo name="DOI" value="10.17487/RFC7950"/>
        </reference>
        <reference anchor="RFC7951">
          <front>
            <title>JSON Encoding of Data Modeled with YANG</title>
            <author fullname="L. Lhotka" initials="L." surname="Lhotka"/>
            <date month="August" year="2016"/>
            <abstract>
              <t>This document defines encoding rules for representing configuration data, state data, parameters of Remote Procedure Call (RPC) operations or actions, and notifications defined using YANG as JavaScript Object Notation (JSON) text.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="7951"/>
          <seriesInfo name="DOI" value="10.17487/RFC7951"/>
        </reference>
        <reference anchor="RFC8366">
          <front>
            <title>A Voucher Artifact for Bootstrapping Protocols</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="M. Pritikin" initials="M." surname="Pritikin"/>
            <author fullname="T. Eckert" initials="T." surname="Eckert"/>
            <date month="May" year="2018"/>
            <abstract>
              <t>This document defines a strategy to securely assign a pledge to an owner using an artifact signed, directly or indirectly, by the pledge's manufacturer. This artifact is known as a "voucher".</t>
              <t>This document defines an artifact format as a YANG-defined JSON document that has been signed using a Cryptographic Message Syntax (CMS) structure. Other YANG-derived formats are possible. The voucher artifact is normally generated by the pledge's manufacturer (i.e., the Manufacturer Authorized Signing Authority (MASA)).</t>
              <t>This document only defines the voucher artifact, leaving it to other documents to describe specialized protocols for accessing it.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8366"/>
          <seriesInfo name="DOI" value="10.17487/RFC8366"/>
        </reference>
        <reference anchor="RFC8792">
          <front>
            <title>Handling Long Lines in Content of Internet-Drafts and RFCs</title>
            <author fullname="K. Watsen" initials="K." surname="Watsen"/>
            <author fullname="E. Auerswald" initials="E." surname="Auerswald"/>
            <author fullname="A. Farrel" initials="A." surname="Farrel"/>
            <author fullname="Q. Wu" initials="Q." surname="Wu"/>
            <date month="June" year="2020"/>
            <abstract>
              <t>This document defines two strategies for handling long lines in width-bounded text content. One strategy, called the "single backslash" strategy, is based on the historical use of a single backslash ('\') character to indicate where line-folding has occurred, with the continuation occurring with the first character that is not a space character (' ') on the next line. The second strategy, called the "double backslash" strategy, extends the first strategy by adding a second backslash character to identify where the continuation begins and is thereby able to handle cases not supported by the first strategy. Both strategies use a self-describing header enabling automated reconstitution of the original content.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8792"/>
          <seriesInfo name="DOI" value="10.17487/RFC8792"/>
        </reference>
        <reference anchor="RFC8812">
          <front>
            <title>CBOR Object Signing and Encryption (COSE) and JSON Object Signing and Encryption (JOSE) Registrations for Web Authentication (WebAuthn) Algorithms</title>
            <author fullname="M. Jones" initials="M." surname="Jones"/>
            <date month="August" year="2020"/>
            <abstract>
              <t>The W3C Web Authentication (WebAuthn) specification and the FIDO Alliance FIDO2 Client to Authenticator Protocol (CTAP) specification use CBOR Object Signing and Encryption (COSE) algorithm identifiers. This specification registers the following algorithms (which are used by WebAuthn and CTAP implementations) in the IANA "COSE Algorithms" registry: RSASSA-PKCS1-v1_5 using SHA-256, SHA-384, SHA-512, and SHA-1; and Elliptic Curve Digital Signature Algorithm (ECDSA) using the secp256k1 curve and SHA-256. It registers the secp256k1 elliptic curve in the IANA "COSE Elliptic Curves" registry. Also, for use with JSON Object Signing and Encryption (JOSE), it registers the algorithm ECDSA using the secp256k1 curve and SHA-256 in the IANA "JSON Web Signature and Encryption Algorithms" registry and the secp256k1 elliptic curve in the IANA "JSON Web Key Elliptic Curve" registry.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8812"/>
          <seriesInfo name="DOI" value="10.17487/RFC8812"/>
        </reference>
        <reference anchor="RFC8949">
          <front>
            <title>Concise Binary Object Representation (CBOR)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
              <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="94"/>
          <seriesInfo name="RFC" value="8949"/>
          <seriesInfo name="DOI" value="10.17487/RFC8949"/>
        </reference>
        <reference anchor="ON-PATH" target="https://mailarchive.ietf.org/arch/msg/saag/m1r9uo4xYznOcf85Eyk0Rhut598/">
          <front>
            <title>can an on-path attacker drop traffic?</title>
            <author>
              <organization/>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="I-D.ietf-anima-brski-prm">
          <front>
            <title>BRSKI with Pledge in Responder Mode (BRSKI-PRM)</title>
            <author fullname="Steffen Fries" initials="S." surname="Fries">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Thomas Werner" initials="T." surname="Werner">
              <organization>Siemens AG</organization>
            </author>
            <author fullname="Eliot Lear" initials="E." surname="Lear">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <date day="4" month="March" year="2024"/>
            <abstract>
              <t>   This document defines enhancements to Bootstrapping a Remote Secure
   Key Infrastructure (BRSKI, RFC8995) to enable bootstrapping in
   domains featuring no or only limited connectivity between a pledge
   and the domain registrar.  It specifically changes the interaction
   model from a pledge-initiated mode, as used in BRSKI, to a pledge-
   responding mode, where the pledge is in server role.  For this, BRSKI
   with Pledge in Responder Mode (BRSKI-PRM) introduces a new component,
   the Registrar-Agent, which facilitates the communication between
   pledge and registrar during the bootstrapping phase.  To establish
   the trust relation between pledge and registrar, BRSKI-PRM relies on
   object security rather than transport security.  The approach defined
   here is agnostic to the enrollment protocol that connects the domain
   registrar to the domain CA.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-brski-prm-12"/>
        </reference>
        <reference anchor="I-D.ietf-anima-constrained-voucher">
          <front>
            <title>Constrained Bootstrapping Remote Secure Key Infrastructure (cBRSKI)</title>
            <author fullname="Michael Richardson" initials="M." surname="Richardson">
              <organization>Sandelman Software Works</organization>
            </author>
            <author fullname="Peter Van der Stok" initials="P." surname="Van der Stok">
              <organization>vanderstok consultancy</organization>
            </author>
            <author fullname="Panos Kampanakis" initials="P." surname="Kampanakis">
              <organization>Cisco Systems</organization>
            </author>
            <author fullname="Esko Dijk" initials="E." surname="Dijk">
              <organization>IoTconsultancy.nl</organization>
            </author>
            <date day="3" month="March" year="2024"/>
            <abstract>
              <t>   This document defines the Constrained Bootstrapping Remote Secure Key
   Infrastructure (cBRSKI) protocol, which provides a solution for
   secure zero-touch onboarding of resource-constrained (IoT) devices
   into the network of a domain owner.  This protocol is designed for
   constrained networks, which may have limited data throughput or may
   experience frequent packet loss. cBRSKI is a variant of the BRSKI
   protocol, which uses an artifact signed by the device manufacturer
   called the "voucher" which enables a new device and the owner's
   network to mutually authenticate.  While the BRSKI voucher data is
   encoded in JSON, cBRSKI uses a compact CBOR-encoded voucher.  The
   BRSKI voucher data definition is extended with new data types that
   allow for smaller voucher sizes.  The Enrollment over Secure
   Transport (EST) protocol, used in BRSKI, is replaced with EST-over-
   CoAPS; and HTTPS used in BRSKI is replaced with DTLS-secured CoAP
   (CoAPS).  This document Updates RFC 8995 and RFC 9148.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-anima-constrained-voucher-24"/>
        </reference>
      </references>
    </references>
    <section anchor="contributors" numbered="false" toc="include" removeInRFC="false">
      <name>Contributors</name>
      <contact initials="T." surname="Eckert" fullname="Toerless Eckert">
        <organization>Futurewei Technologies Inc.</organization>
        <address>
          <email>tte+ietf@cs.fau.de</email>
        </address>
      </contact>
      <contact initials="E." surname="Dijk" fullname="Esko Dijk">
        <organization/>
        <address>
          <email>esko.dijk@iotconsultancy.nl</email>
        </address>
      </contact>
      <contact initials="S." surname="Fries" fullname="Steffen Fries">
        <organization>Siemens AG</organization>
        <address>
          <email>steffen.fries@siemens.com</email>
        </address>
      </contact>
    </section>
  </back>
  <!-- ##markdown-source:
H4sIANh+cmYAA+1865KjSJbmfz2FNtpsO9M6Iwp0iUqlWdtMSAIkIkAhBxyJ
ybExBESAuCag0KWt9ln2WfbJ9nNAUigiqjq7Z3/MmG1aVaeEnOPHz+U733H3
6uvr61YZlJH3rS2bWrsInhPPbdN04/he3r7Ly+DJdsqi/ZTm7WGalkWZ21kW
JM/txzwtUyeNina7Za9WufdSibh+ad5tt9zUSewYkt3cfiqvA698uraTILav
19viOO6a5zC02KzioCiCNNH3Gd6YCrqIx62itBP3P+woTfCwzDdeqxVkefWx
KDscN+A6LTv3bLyRlF6eeGVr+/ytXc3SNtM8ZJpKebrJWuH2POh6zDRqOXb5
rV2UbmuTuXbpFd/aX7u3t6ugaLWy4Fsbf/7UduykvSm8tp3n9r79KXhq21HU
3nvF5zZM4tuF38YqvFa7DWt8Yz/gY5HmZe49Fd8qEa73ZG8iGLFMj7/v4/pn
9rVlb0o/zb+1WtftIMFD/aZtMjVzjKwNqPtpbBfnp2mORWqBF3tJ0b6T8MSL
7SCCXaqB19tq4L8W9YgbJ41PwpWbNgkc387dIk1OEyjskRdd/lTPAgd4UQwr
aOlTuYWxK7sW5zljJ/8L8+2/FsehN47dajlpUubBalOypZ1XJjihl5fnlaVe
HnlFcX5ezSpuyk3ubb2grXuOn6RR+hx4Bfzn3LxabOnVEzvFDSx843rHeYSb
9jhYh6dZhCJMj0+alz08unHx6F+DtISuBTxkJ87+JomOUrSbtpgHlcNqMVrp
PT15yenp77qhqAfePLGBl25I0jy2y+DF+4bhQ6LdT7+1iTj6Ohj08WB6Pb55
ly35k9PEJXsHg/udr1zz8dc+328+fu30BwiiIHl6PYVm6Y/1DP1fO/XA7m1n
cJR02+8cJQ363PkjfxSKiY8ffx0cx379yp8+DnqVsJl6/XinT9hHpIKdP3vI
rSu/LLPi2y+/MLPYueNDqRu2shuY7hf24Je4eP6lsO3nX2I+H2zS3m55SGbO
09e+sA854m/K/uDrL1e11BqnrlhK4p80uc7s0m/bZWmz4AHMpBmQwX56Cpx/
qV+pPMTABPF/fd22Vwy/nLLV+tvf/o6pf/uN5W2QIOrsths8B6UdAQRqPAQq
RBFw8oh1Nhu0vFOl6/odty1rM7UNANzA8yXS0i7bQXGE103BYMluj/J9VqbP
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
5g+QngfUf/mjAZ1zLWg4b7v9B9XgtJx6NW/KwUf4/ZMV4VXTfywFF7TqzLiq
E9nfZ3rNJvpr8vrpr2+48fuG5A8Iaf8dZLf+hHmDF9vZt0fNGU3d6ta6n3uB
H4CREpH94tlRXa2mY+9lOj5lQhpnacLi7tNjtU32+XQU32ApAthhO9Z4YfX6
TPW4oZQ3c6SOs0FKs73oia4/XjMjXesP2hd2No358y+nTel6pusyvSbVUXNu
522MZFmQ1Ev+8mrcaWO8OOGb43hZeWRoZxlsE5Btx5+zu8G25rih2NSnYchg
NyjYXhpzLUim3R6nkfdyvbTT82WJT3b7KkaoOEG6AVTBBl7yDErFTgibuxzs
kIUdjNXn8G/dxnMfZW6ztVDnZsMYVoyQV2cS7HAsazzrXHi2cnp1Ks12LD/y
elAUmxrj2G2AnzmROu4onCpstfX86ryh2AOU4orcu27OTPB2jfzFCi/3Uk7H
cOxGxLNX7WFWcYfC12hbnQStGXLWY4o3x1Xl8XLTvtbv9W7xMfLqzeICcVzd
Qms2CG7Y3t1RzYp6NOf1bpUKFcweJTGfYFl/fOZfx299qPPmYCAq0mbjCC48
LSRFQNbuqnw3vVPv3vkN2KOwU5trdtZyDOV9k1pFo/3xQkbxM3c5mrS9qsS2
mdjiqpGQV4pgyj+S0KowuFKnvtP1enT1m7ZZla9+fieAjSHHWnomwxiKpsOr
fp4dT5o+/lk4biRfpgCGIGn+8vpYvw7d6tJMfbZUvNp4+ehP059W7sd0FV15
vT9X7a9Vqzym2jsdNM87uebfficj60pW3aasbnM0p6LvZOkXd3aA/7V6VcPe
rGSVo4IA9YKzsMirdXzcVCyEnYs056aVYMj9N30y1VjF+Pd65N3Zh835Zb3H
FxSvTg3x3p06Ve6+tG9L4KPfHFKxPZdGF9C/FLjNUuOiGPySvUqUdpFGmzq+
q6nPR52vzga/NRIV+zlw2nW3+qn4DBXUYxS022IAr1Rn+Ex0/fPNy3p9eteB
UVLQsCc2sApKVl7rgadoeoRP4ar/Wd89PCJZ1Ukxbt1cTTpuLr3WsV3fjKtn
q0zTNqWTZ5N6p8B+ZoZ7mCpTXRg3wc+2WJza2BVDrseoM1WoTVLfZ30jc1Sj
ZHUtFPTOy1/P/3iugMdsrnT8l/anY/+JJeUITXaoWNlxxlDnzgmTdMsKaXXR
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
aNxcAAA=

-->

</rfc>
